

services:
  api:
    build:
      context: .
      dockerfile: deployment/Dockerfile
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    # command: python -m debugpy --listen 0.0.0.0:8001 --wait-for-client -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    env_file: .env
    depends_on:
      - postgres
      - redis
      - mock_email
    ports:
      - "8000:8000"
      - "8001:8001"
    restart: unless-stopped
    volumes:
      - ./:/app  # Maps to /app in container (matches remoteRoot)
    command: python -m debugpy --listen 0.0.0.0:8001  --wait-for-client -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    stdin_open: true
    tty: true


  celery_worker:
    build:
      context: .
      dockerfile: deployment/Dockerfile
    command: celery -A app.core.celery_app.celery_app worker --loglevel=info
    env_file: .env
    depends_on:
      - postgres
      - redis
      - mock_email
    restart: unless-stopped

  mock_email:
    image: python:3.12-slim
    command: python /app/scripts/mock_email_server.py
    volumes:
      - ./:/app
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      default:
        aliases:
          - mock-email
          - mock_email

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: register
      POSTGRES_PASSWORD: register
      POSTGRES_DB: user_activation
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped

volumes:
  postgres_data:
